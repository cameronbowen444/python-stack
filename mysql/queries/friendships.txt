-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema friendships
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `friendships` ;

-- -----------------------------------------------------
-- Schema friendships
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `friendships` ;
USE `friendships` ;

-- -----------------------------------------------------
-- Table `friendships`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendships`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `friendships`.`friendships`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `friendships`.`friendships` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `friend_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_table2_users_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_table2_users1_idx` (`friend_id` ASC) VISIBLE,
  CONSTRAINT `fk_table2_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `friendships`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table2_users1`
    FOREIGN KEY (`friend_id`)
    REFERENCES `friendships`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


QUERIES TO RUN : 

INSERT INTO `friendships`.`users` (`first_name`, `last_name`, `created_at`, `updated_at`) 
VALUES ('Amy', 'Giver', NOW(), NOW());

INSERT INTO `friendships`.`users` (`first_name`, `last_name`, `created_at`, `updated_at`) 
VALUES ('Eli', 'Byers', NOW(), NOW());

INSERT INTO `friendships`.`users` (`first_name`, `last_name`, `created_at`, `updated_at`) 
VALUES ('Marky', 'Mark', NOW(), NOW());

INSERT INTO `friendships`.`users` (`first_name`, `last_name`, `created_at`, `updated_at`) 
VALUES ('Big', 'Bird', NOW(), NOW());

INSERT INTO `friendships`.`users` (`first_name`, `last_name`, `created_at`, `updated_at`) 
VALUES ('Kermit', 'The Frog', NOW(), NOW());

INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('1', '1', '2', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('2', '1', '4', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('3', '1', '5', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('4', '2', '5', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('5', '2', '3', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('6', '3', '4', NOW(), NOW());

INSERT INTO `friendships`.`users` (`id`, `first_name`, `last_name`, `created_at`, `updated_at`) 
VALUES ('6', 'Best', 'Friend', NOW(), NOW());

UPDATE `friendships`.`friendships` SET `friend_id` = '6' WHERE (`id` = '3');
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('7', '2', '1', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('8', '3', '5', NOW(), NOW());
UPDATE `friendships`.`friendships` SET `friend_id` = '2' WHERE (`id` = '6');
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('9', '4', '3', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('10', '5', '1', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('11', '5', '6', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('12', '6', '2', NOW(), NOW());
INSERT INTO `friendships`.`friendships` (`id`, `user_id`, `friend_id`, `created_at`, `updated_at`) VALUES ('13', '6', '3', NOW(), NOW());


SELECT users.first_name, users.last_name, users2.first_name as friend_first_name, users2.last_name as friend_last_name 
FROM users
JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as users2 ON users2.id = friendships.friend_id;

SELECT users.first_name, users.last_name, users2.first_name as friend_first_name, users2.last_name as friend_last_name 
FROM users
JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as users2 ON users2.id = friendships.friend_id
WHERE users.id = 1;

SELECT COUNT(*) as num_of_friendships from friendships;

SELECT user_id, users.first_name, users.last_name, count(user_id) as num_of_friends from friendships
JOIN users ON users.id = friendships.user_id
GROUP BY user_id
ORDER BY num_of_friends DESC
LIMIT 1;


SELECT users2.first_name as first_name, users2.last_name as last_name, users.first_name as friends_with FROM users
JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as users2 ON users2.id = friendships.friend_id
WHERE users.id = 3
ORDER BY first_name;